created: 20231017132429495
creator: TidGi User
modified: 20231017151514060
modifier: TidGi User
tags: 
title: C++基础_变量和基本类型
wysiwyg: yes

# 基本内置类型
## 算数类型
### 整形（包括字符和浮点型）
### 浮点型
## 空类型（void）
# 变量：变量提供一个具名的、可供程序操作的存储空间（基本数据类型+声明符）
## 变量的初始化与赋值：
### 初始化不是賦值，初始化的含义是创建变量时賦予其一个初始值，而赋值的含义是把对象的当前值擦除，而以一个新值来替代。
### 列表初始化
### 默认初始化：如果没有指定初值，则被默认初始化
## 变量声明与定义：
### 声明：使得名字被程序所知，一个文件如果想使用别处定义的名字则必须包含对那个名字的声明，变量声明规定了变量的类型和名字，使用关键字：''extern'' int i;
### 定义：负责创建与名字关联的实体
### 关系：变量能切只能被定义一次，但可以被多次声明
## 作用域
# 复合类型（类型修饰符 *或&）
## 引用：声明符：&+变量名
### 引用即别名：定义引用时，引用和它的初始值绑定在一起，而不是将初始值拷贝给引用，引用无法重新绑定，引用必须被绑定在对象上，不能与字面值或结算结果绑定[[C++ 中的对象和字面值]]
## 指针： 
*** 声明符：*+变量名
*** 指针本身就是一个对象，允许对其赋值和拷贝，允许改变指向
*** 指针存放的时对象的地址，使用取地址符（&）：int *p=
*** 指针值：指针的值(即地址)应属下列4种状态之一:
**** 指向一个对象
**** 指向紧邻对象所占空间的下一个位置。
**** 空指针，意味着指针没有指向任何对象。
**** 无效指针， 也就是上述情况之外的其他值
*** 利用指针访问对象：使用解引用符（*）：cout << *p;
*** 空指针：不指向任何对象，以下列出几个生成空指针的方法:
**** int *pl= nullptr; 等价于int *pl = 0;
**** int *p2= 0;直接将p2初始化为字面常量。 
**** 需要首先#includecstdlib int *p3 = NULL;等价于int*p3= 0;
*** void指针：
